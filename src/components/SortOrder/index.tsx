// This component was generated by @sitecore-search/cli on Mon Aug 05 2024 08:51:27 GMT+0000 (Coordinated Universal Time)

import type { SearchResponseSortChoice } from "@sitecore-search/react";
import { useSearchResultsActions } from "@sitecore-search/react";
import { SortSelect } from "@sitecore-search/ui";

type SortOrderProps = {
  options: Array<SearchResponseSortChoice>;
  selected: string;
};
const SortOrder = ({ options, selected }: SortOrderProps) => {
  const selectedSortIndex = options.findIndex((s) => s.name === selected);
  const { onSortChange } = useSearchResultsActions();
  return (
    <SortSelect.Root
      defaultValue={options[selectedSortIndex]?.name}
      onValueChange={onSortChange}
    >
      <SortSelect.Trigger className="cursor-pointer inline-flex items-center bg-transparent h-10 gap-1 p-2 border-gray-600 border-2 rounded focus:outline-gray-500 dark:text-white ">
        <SortSelect.SelectValue>
          {selectedSortIndex > -1 ? options[selectedSortIndex].label : ""}
        </SortSelect.SelectValue>
        <SortSelect.Icon />
      </SortSelect.Trigger>
      <SortSelect.Content className="bg-gray-200 dark:bg-gray-600 rounded w-full z-[100] absolute top-12 focus-within:border-gray-600">
        <SortSelect.Viewport className="p-1 z-[50000]">
          {options.map((option: any) => (
            <SortSelect.Option
              value={option}
              key={option.name}
              className="flex items-center leading-none cursor-pointer select-none whitespace-no-wrap h-6 px-1 hover:bg-gray-900  hover:text-white data-[state=checked]:font-bold data- focus:outline-gray-400"
            >
              <SortSelect.OptionText>{option.label}</SortSelect.OptionText>
            </SortSelect.Option>
          ))}
        </SortSelect.Viewport>
      </SortSelect.Content>
    </SortSelect.Root>
  );
};

export default SortOrder;
